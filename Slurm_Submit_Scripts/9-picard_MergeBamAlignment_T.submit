#!/usr/bin/bash
#SBATCH --mail-type=ALL,TIME_LIMIT
#SBATCH --mail-user=jacojam@ohsu.edu
#SBATCH --time=1-12:00:00
#SBATCH -a 1-4
#SBATCH --error=/home/exacloud/lustre1/jjacobs/osteo_logs/stderr.MergeBamAlignment_T_%a
#SBATCH --output=/home/exacloud/lustre1/jjacobs/osteo_logs/stout.MergeBamAlignment_T_%a

#This submit script uses the program picard and the function, MergeBamAlignment, to merge defined information
#from the unmapped BAM with that of the aligned BAM to conserve read data (original read information and base
#quality scores).  The tool also generates additional meta information based on the information generated by 
#the aligner, which may alter aligner-generated designations (mate info and secondary alignment flags). The
#tool then makes adjustments so that all meta information is congruent (e.g. read and mate strand info based
#on proper mate designations).  For details on this, see the GATK Tutorial 6483 at:
#https://software.broadinstitute.org/gatk/documentation/article?id=6483
#
#The aligned BAM generated from the BWA_mem_align step lacks read group info and certain tags (UQ, MC, MQ as examples).
#It has hard-clipped sequences from split reads and altered base qualities.  MergeBamAlignment adjusts the read and 
#read mate strand orientations for reads in a proper pair.  Finally, the alignment records are sorted by query name.
#MergeBamAlignment applies read group info from the uBAM and retains the program group info from the aligned BAM.
#In restoring original sequences, the tool adjusts CIGAR strings from hard-clipped to soft-clipped.  If the 
#alignment file is missing reads present in the unaligned file, then these are retained as unmapped records. Additionally,
#the tool evaluates primary alignment designations according to a user-specified stragegy (e.g. for optimal mate paie 
#mapping, and changes secondary alignment and mate unmapped flags based on its calculations).
#
#The "PRIMARY_ALIGNMENT_STRATEGY=MostDistant" option marks primary alignments based on the alignment pair with the 
#largest insert size.  This strategy is based on the premise that of chimeric sections of a read aligning to consecutive regions, 
#the alignment giving the largest insert size with the mate gives the most information.
#
#The "MAX_INSERTIONS_OR_DELETIONS=-1" option retains reads irregardless of the number of insertons and deletions.
#
#The "ALIGNER_PROPER_PAIR_FLAGS" option is set to its default.  Thus, MergeBamAlignment will reassess and
#reassign proper pair designations made by the aligner.
#
#The "ATTRIBUTES_TO_RETAIN=XS" option tells the program to keep reads flagged by BWA-mem's suboptimal alignment
#scores.
#
#The "CLIP_ADAPTERS=false" option leaves reads unclipped.
#
#The picard program is located in
#/home/exacloud/lustre1/jjacobs/programs/picard
#Here I set a common directory so I don't have to
#type it multiple times.
COMMON_DIR="/home/exacloud/lustre1/jjacobs"
PICARD_DIR=$COMMON_DIR"/programs/picard"

NLANES=4
rns=(SJOS008_G)
fls_SJOS008_G=(2880403526.bam 2880403667.bam 2880406913.bam 2880737702.bam)
#fls_SJOS006_G=()
#fls_SJOS007_G=()

ALIGNMENT_RUN=${rns[$(((${SLURM_ARRAY_TASK_ID}-1)/$NLANES))]}
#ALIGNMENT_RUN="SJOS001110_G1"

dmy=fls_${ALIGNMENT_RUN}[$(((${SLURM_ARRAY_TASK_ID}-1)%$NLANES))]

INPUT_ALIGNED=$COMMON_DIR"/data/osteo/"$ALIGNMENT_RUN"/postalt_aligned_lane_$((((${SLURM_ARRAY_TASK_ID}-1)%$NLANES)+1)).sam"
#INPUT_ALIGNED=$COMMON_DIR"/data/osteo/"$ALIGNMENT_RUN"/postalt_aligned_lane_${SLURM_ARRAY_TASK_ID}.sam"

INPUT_uBAM=$COMMON_DIR"/data/osteo/"$ALIGNMENT_RUN"/"${!dmy}
#INPUT_uBAM=$COMMON_DIR"/data/osteo/"$ALIGNMENT_RUN"/${fls[${SLURM_ARRAY_TASK_ID}-1]}"

OUTPUT_DIR=$COMMON_DIR"/data/osteo/"$ALIGNMENT_RUN
FASTA_DIR=$COMMON_DIR"/GATK_indexes/hg38_osteo"

srun /usr/bin/java -Xmx16G -jar $PICARD_DIR/picard.jar MergeBamAlignment \
ALIGNED_BAM=$INPUT_ALIGNED \
UNMAPPED_BAM=$INPUT_uBAM \
O=$OUTPUT_DIR/MergedBamAlignment_postalt_lane_$((((${SLURM_ARRAY_TASK_ID}-1)%$NLANES)+1)).bam \
R=$FASTA_DIR/Homo_sapiens_assembly38.fasta \
CREATE_INDEX=true \
ADD_MATE_CIGAR=true \
CLIP_ADAPTERS=false \
CLIP_OVERLAPPING_READS=true \
INCLUDE_SECONDARY_ALIGNMENTS=true \
MAX_INSERTIONS_OR_DELETIONS=-1 \
PRIMARY_ALIGNMENT_STRATEGY=MostDistant \
ATTRIBUTES_TO_RETAIN=XS \
TMP_DIR=$COMMON_DIR/submit_scripts/osteo_Workflow/working_temp_mbat_${SLURM_ARRAY_TASK_ID}

sbatch --dependency=afterok:${SLURM_JOB_ID} $COMMON_DIR/submit_scripts/osteo_Workflow/10-picard_mergesamfiles_T.submit
